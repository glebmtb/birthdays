<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
  <!--Настраивает управление транзакциями с помощью аннотации @Transactional-->
  <tx:annotation-driven transaction-manager="transactionManager"/>

  <!-- Менеджер транзакций
  Бин настройки менеджера транзакций. Мы используем менеджер транзакций для управления транзакциями приложения.-->
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate" autowire-candidate="true"
        primary="true">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="flushModeName" value="FLUSH_EAGER"/>
  </bean>

  <!--Бин для обеспечения интернациолизации приложения. Ниже мы создадим файлы messages_en.properties и messages_ru.properties
  с локализованными сообщениями на русском и английском.-->
  <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="basename" value="classpath:messages"/>
    <property name="defaultEncoding" value="UTF-8"/>
  </bean>

  <!--Настройки бина dataSource будем хранить в отдельном файле Для загрузки файла с настройками БД jdbc.properties.-->
  <!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
p:location="/WEB-INF/jdbc.properties"/>    -->

  <!-- Непосредственно бин dataSource Датасорс, используется для подключения к БД.
  Мы предоставляем класс jdbc-драйвера, имя пользователя, пароль, другие настройки.-->
  <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiName" value="java:/comp/env/BirthdaysPool"/>
  </bean>

  <!-- Настройки фабрики сессий Хибернейта
  Это бин конфигурации Хибернейта. В файле hibernate.cfg.xml будут содержаться маппинги на классы сущностей.-->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="configurationClass">
      <value>org.hibernate.cfg.AnnotationConfiguration</value>
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.show_sql">true</prop>
      </props>
    </property>
    <property name="packagesToScan">
      <array>
        <value>ru.n5g.birthdays.core.server.bean</value>
      </array>
    </property>
  </bean>
</beans>